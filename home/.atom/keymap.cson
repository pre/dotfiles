# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'.atom-workspace':
  'cmd-alt-w': 'pane:close-other-items'
  'ctrl-b': 'blame:toggle'

'.editor':
  'cmd-i': 'editor:auto-indent'
  'ctrl-i': 'window:toggle-invisibles'
  'ctrl-r': 'editor:toggle-soft-wrap'
  'cmd-ä': 'expand-region:expand'
  'shift-cmd-ä': 'expand-region:shrink'

'atom-workspace atom-text-editor:not([mini])':
  'cmd-.': 'editor:toggle-line-comments'

'atom-text-editor':
  'ctrl-left': 'last-cursor-position:previous'
  'ctrl-right': 'last-cursor-position:next'
  'ctrl-up': 'expand-region:expand'
  'ctrl-down': 'expand-region:shrink'
  'ctrl-l': 'go-to-line:toggle'
  'cmd-k r': 'tree-view:reveal-active-file'
  'cmd-k cmd-r': 'tree-view:reveal-active-file'
  'cmd-ö': 'linter-rubocop:fix-file'
  'ctrl-s': 'spell-check:toggle'
  'cmd-k f': 'tree-view:show-current-file-in-file-manager'
  'cmd-k cmd-f': 'tree-view:show-current-file-in-file-manager'
